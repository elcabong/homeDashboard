! function(t, e, s, n, o) {
    "use strict";
    t.mPanel = function() {
        var t = {};
        t.settings = {};  //, t.rssData = null, t.rssItemsTotal = 0, t.rssCurrent = 0;
		// need emoji?
		//e.getScript("./js/loadEmojis.js", function() {});
        var n = new ProgressBar.Line("#progress", {
            strokeWidth: 3,
            color: "#888888"
        });
		var getDailyReset = 0;
		/*
		var weekday = new Array(7);
			weekday[0] =  "Sunday";
			weekday[1] = "Monday";
			weekday[2] = "Tuesday";
			weekday[3] = "Wednesday";
			weekday[4] = "Thursday";
			weekday[5] = "Friday";
			weekday[6] = "Saturday";
		*/
		var weekday = new Array(7);
			weekday[0] =  "Sun";
			weekday[1] = "Mon";
			weekday[2] = "Tue";
			weekday[3] = "Wed";
			weekday[4] = "Thu";
			weekday[5] = "Fri";
			weekday[6] = "Sat";		
		function weatherCode(input){
			var theWeatherCode = 3200;
			switch(parseInt(input,10)){
				case 200:
				case 201:
				case 230:
				case 231:
				case 232:
					theWeatherCode = 4;
					break;
				case 202:
					theWeatherCode = 45;
					break;
				case 233:
					theWeatherCode = 3;
					break;
				case 300:
				case 301:
				case 500:
					theWeatherCode = 9;
					break;
				case 302:
				case 501:
				case 502:
				case 900:
					theWeatherCode = 11;
					break;
				case 511:
					theWeatherCode = 10;
					break;
				case 520:
				case 521:
				case 522:
					theWeatherCode = 12;
					break;
				case 600:
				case 601:
					theWeatherCode = 16;
					break;
				case 602:
				case 622:
					theWeatherCode = 43;
					break;
				case 610:
					theWeatherCode = 14;
					break;
				case 611:
				case 612:
					theWeatherCode = 18;
					break;
				case 621:
					theWeatherCode = 46;
					break;
				case 623:
					theWeatherCode = 13;
					break;
				case 700:
				case 721:
					theWeatherCode = 21;
					break;
				case 711:
					theWeatherCode = 22;
					break;
				case 731:
					theWeatherCode = 19;
					break;
				case 741:
				case 751:
					theWeatherCode = 20;
					break;
				case 800:
					theWeatherCode = 32;
					break;
				case 801:
				case 802:
				case 803:
					theWeatherCode = 30;
					break;
				case 804:
					theWeatherCode = 26;
					break;
				case 900:
					theWeatherCode = 11;
					break;
			}
			return theWeatherCode;
		}		
		
		
        return t.updateTime = function() {
            var s = moment().tz(this.settings.timezone);
            if ("analog" == this.settings.clockType) {
                var n = 6 * s.seconds(),
                    o = 6 * s.minutes() + n / 60,
                    a = s.hours() % 12 / 12 * 360 + 90 + o / 12;
                e("#hour").css("transform", "rotate(" + a + "deg)"), e("#minute").css("transform", "rotate(" + o + "deg)"), e("#second").css("transform", "rotate(" + n + "deg)")
            } else e(".clock .time").html(s.format((12 == this.settings.timeFormat ? "h" : "HH") + ":mm") + (1 == this.settings.showSeconds || "" == this.settings.showSeconds ? '<span class="sec">' + s.format("ss") + "</span>" : "") + (1 == this.settings.showAmpm ? '<span class="time-ampm">' + s.format("A") + "</span>" : ""));
            "D MMMM" == this.settings.dateFormat ? e(".date").html('<div class="day-of-week">' + s.format("dddd") + '</div><div class="month">' + s.format("D MMMM") + "</div>") : "dddd D. MMMM" == this.settings.dateFormat ? e(".date").html('<div class="day-of-week">' + s.format("dddd D. MMMM") + "</div>") : e(".date").html('<div class="day-of-week">' + s.format("dddd") + '</div><div class="month">' + s.format("MMMM D") + "</div>"), setTimeout(function() {
                t.updateTime()
            }, 1e3)
		/*
        }, t.updateEvents = function() {
            e("#calendar").load(this.settings.route + "/events", function() {
                e(s).resize(), e("#events-loading").hide(), e("#calendar").fadeIn()
            }), setTimeout(function() {
                t.updateEvents()
            }, this.settings.isPremium ? 9e5 : 36e5)
        }, t.updateTodo = function() {
            e("#todo").load(this.settings.route + "/todo", function() {
                e(s).resize(), e("#todo-loading").hide(), e("#todo").fadeIn()
            }), setTimeout(function() {
                t.updateTodo()
            }, 9e5)
		*/
        }, t.updateWeather = function() {
			/*
            e.getJSON("https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22"+this.settings.city+"%2C%20"+this.settings.state+"%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys", function(yh) {
                var yahoo = yh.query.results.channel;
				//console.log(yahoo);
				var sunrise = yahoo.astronomy.sunrise;
				if (/^\d{1,2}\:\d{1}\s/.test( sunrise )){
					var value = /^\d{1,2}(\:\d)\s/.exec(sunrise)[1];
					sunrise = sunrise.replace( value, ':0' + value.substr(1) )
				}			
				var sunset = yahoo.astronomy.sunset;
				if (/^\d{1,2}\:\d{1}\s/.test( sunset )){
					var value = /^\d{1,2}(\:\d)\s/.exec(sunset)[1];
					sunset = sunset.replace( value, ':0' + value.substr(1) )
				}
				document.getElementById('weather-current').innerHTML = '<div class="bright big">'
					+		yahoo.item.condition.temp +'<sup>°</sup>'
					+		'<span class="wi wi-yahoo-'+yahoo.item.condition.code+'"></span>'
					+	'</div>'
					+	'<div class="bright"><span class="bright weather-forecast-item-low xxsmall">Humidity: '+ yahoo.atmosphere.humidity +'%</span></div>'
					+	'<div class="weather-current-alt font-light">'
					+		'<span class="wi wi-strong-wind"> '+ yahoo.wind.speed+ 'mph <i class="xsmall wi wi-wind towards-'+yahoo.wind.direction+'-deg"></i></span>'
					+		'<br><span class="wi wi-sunrise"></span>  '+ sunrise
					+		'<br><span class="wi wi-sunset"></span>  '+ sunset
					+	'</div>';					
					

				document.getElementById('weather-forecast').innerHTML = '';
				var forecast = "";
				for(var count in yahoo.item.forecast){
					if(count==0){
						var dayTitle = 'TODAY';
					} else if(count<5) {
						var dayTitle = yahoo.item.forecast[count].day.toUpperCase();
					} else { break; }
					forecast = '<div class="text-center weather-item weather-forecast">'
					+	'<div class="day">'+dayTitle
					+	'</div><span class="wi wi-yahoo-'+yahoo.item.forecast[count].code+' bottom"></span><br>'
					+	'<span class="bright weather-forecast-item-high">'+ yahoo.item.forecast[count].high+'<sup>°</sup>'
					+	'</span><span class="bright weather-forecast-item-low xxsmall" style="margin: 0 10px;">'+ yahoo.item.forecast[count].low+'<sup>°</sup>'
					+	'</span></div>';
					
					document.getElementById('weather-forecast').innerHTML += forecast;
				}
				*/
				
				
            e.getJSON("https://api.weatherbit.io/v2.0/current?city="+t.settings.city+","+t.settings.state+"&units=I&key="+t.settings.weatherBitKey, function(wb) {
                var current = wb.data[0];
				var sunrise = current.sunrise;
				sunrise = new Date(current.datetime.split(':')[0] +'T'+ sunrise+':00.000Z');
				if(sunrise.getMinutes()<10){
					sunrise = sunrise.getHours() + ':0' + sunrise.getMinutes();
				} else {
					sunrise = sunrise.getHours() + ':' + sunrise.getMinutes();
				}
				
				var sunset = current.sunset;
				sunset = new Date(current.datetime.split(':')[0] +'T'+ sunset+':00.000Z');
				if(sunset.getMinutes()<10){
					sunset = ((sunset.getHours() + 24) % 12 || 12) + ':0' + sunset.getMinutes();
				}else{
					sunset = ((sunset.getHours() + 24) % 12 || 12) + ':' + sunset.getMinutes();
				}
				document.getElementById('weather-current').innerHTML = '<div class="bright big">'
					+		current.temp +'<sup>°</sup>'
					+		'<span class="wi wi-yahoo-'+weatherCode(current.weather.code)+'"></span>'
					+	'</div>'
					+	'<div class="bright"><span class="bright weather-forecast-item-low xxsmall">Humidity: '+ current.rh +'%</span></div>'
					+	'<div class="weather-current-alt font-light">'
					+		'<span class="wi wi-strong-wind"> '+ current.wind_spd+ 'mph <i class="xsmall wi wi-wind towards-'+current.wind_dir+'-deg"></i></span>'
					+		'<br><span class="wi wi-sunrise"></span>  '+ sunrise + ' am'
					+		'<br><span class="wi wi-sunset"></span>  '+ sunset + ' pm'
					+	'</div>';
					
				
				
				
				
				
				
				if(getDailyReset<1){
					e.getJSON("https://api.weatherbit.io/v2.0/forecast/daily?city="+t.settings.city+","+t.settings.state+"&key="+t.settings.weatherBitKey+"&units=I", function(wb) {
						var daily = wb.data;
					
						document.getElementById('weather-forecast').innerHTML = '';
						var forecast = "";
						//for(var count in daily){
						for(var count = 0; count < 5; count++){
							if(count==0){
								var dayTitle = 'TODAY';
								var curDay = new Date().getDay();
							} else {
								if(curDay<6){
									curDay = curDay + 1;
								} else {
									curDay = 0;
								}
								var dayTitle = weekday[curDay];
							}
							forecast = '<div class="text-center weather-item weather-forecast">'
							+	'<div class="day">'+dayTitle
							+	'</div><span class="wi wi-yahoo-'+weatherCode(daily[count].weather.code)+' bottom"></span><br />'
							+	'<div style="white-space: nowrap;"><span class="weather-forecast-item-low xxsmall">Rain: '+ daily[count].pop +'%</span></div>'
							+	'<div class="bright weather-forecast-item-high">'+ daily[count].max_temp+'<sup>°</sup></div>'
							+	'<div class="bright weather-forecast-item-low xxsmall">'+ daily[count].min_temp+'<sup>°</sup></div>'
							+	'</div>';
							
							document.getElementById('weather-forecast').innerHTML += forecast;
						}
					});	
				}
				


				e.getJSON("https://api.weatherbit.io/v2.0/forecast/hourly?city="+t.settings.city+","+t.settings.state+"&key="+t.settings.weatherBitKey+"&hours=12&units=I", function(wb) {
					var hourly = wb.data;
				
					document.getElementById('weather-hourly').innerHTML = '';
					var forecast = "";
					for(var count in hourly){
			
						var date = new Date(hourly[count].ts*1000);
						// Hours part from the timestamp
						var hours = date.getHours();
						// Minutes part from the timestamp
						var minutes = "0" + date.getMinutes();
						var post = "am";
						if(hours>11){
							post = "pm";
						}
						if(hours>12){
							hours = hours - 12;
						}
						if(hours===0){
							hours = 12;
						}
						// Will display time in 10:30 format
						var formattedTime = hours + ':' + minutes.substr(-2);						
						
					
						forecast = '<div class="text-center weather-item weather-hourly">'
						+	'<div class="day bright">'+formattedTime+'<span class="bright weather-forecast-item-low xxsmall">'+post
						+	'</span></div><span class="bright weather-forecast-item-high">'+ hourly[count].temp +'<sup>°</sup> <span class="wi wi-yahoo-'+weatherCode(hourly[count].weather.code)+'"></span><br />'
						+	'</span><span class="bright weather-forecast-item-low xxsmall" style="margin: 0 10px;">Humidity: '+ hourly[count].rh+'%<br />'
						+	'</span><span class="bright weather-forecast-item-low xxsmall" style="margin: 0 10px;">Rain: '+ hourly[count].precip+'%<br />'
						+   '<span class="wi wi-strong-wind"> '+ hourly[count].wind_spd +' mph<i class="wi wi-wind towards-'+ hourly[count].wind_dir +'-deg"></i></span>'
						+	'</span></div>';
						
						document.getElementById('weather-hourly').innerHTML += forecast;
					}
					
					e.getJSON("https://api.weather.gov/alerts/active/zone/"+t.settings.weatherGovZone, function(wgov) {
						//console.log(wgov);
						if(wgov.features.length>0){
							//console.log(wgov.features);
							var thisfeature = wgov.features[0];
							
							document.getElementById('weather-alert-expires').innerHTML = thisfeature.properties.headline;
							//document.getElementById('weather-alert-description').innerHTML = thisfeature.properties.instruction;
							document.getElementById('weather-alert-message').innerHTML = thisfeature.properties.instruction;

							$('#weather-alert').show();
						} else {
							$('#weather-alert').hide();
						}
					});
				});
				e("#weather-loading").hide(), e("#weather").fadeIn(), e(s).resize();
				getDailyReset++;
			});		
			setTimeout(function() {
				if(getDailyReset>20){
					getDailyReset = 0;
				}
                t.updateWeather();
            }, 9e5)
        /*
		}, t.updateRss = function() {
            e.getJSON(this.settings.route + "/rss", function(e) {
                t.rssData = e, t.rssItemsTotal = e.length, t.rssCurrent = 0, clearTimeout(t.rssRotateTimer), t.rotateRssTitles()
            }), setTimeout(function() {
                t.updateRss()
            }, 18e5)
		
        }, t.rotateRssTitles = function() {
            var s = this.rssCurrent,
                n = this.rssData;
            e(".rss-title").fadeOut(200, function() {
                e(this).html(n[s].title).fadeIn(200)
            }), e(".rss-description").length > 0 && e(".rss-description").fadeOut(200, function() {
                e(this).html(n[s].description).fadeIn(200)
            }), this.rssCurrent++, this.rssCurrent >= this.rssItemsTotal && (this.rssCurrent = 0), this.rssRotateTimer = setTimeout(function() {
                t.rotateRssTitles()
            }, 25e3)
		*/
		}, t.setPhoto = function(data) {
            if (e("#background-underlay-1").is(":visible")){
				var s = e("#background-underlay-1");
                o = e("#background-underlay-2");
            } else { 
				o = e("#background-underlay-1");
				s = e("#background-underlay-2");
			}
			var a = {};
			a.url = data['media']['m'].replace("_m", "_b");
			a.title = data['title'];
			a.owner = data['author'];
			a.profile_url = data['link'];
			a.taken = data['date_taken'];
			a.verb = data['tags'];
			
			e("<img/>").attr("src", a.url).load(function() {
				e(this).remove(), o.css({
					background: "#000 url(" + a.url + ") center center",
					backgroundSize: "fill" == t.settings.photoLayout ? "cover" : "contain",
					backgroundRepeat: "no-repeat"
				});
				var i = '<span class="dark">Photo</span> ';
				a.owner && (i = i + ' <span class="dark">by</span> <a href="' + a.profile_url + '" target="_blank">' + a.owner + "</a>"), e("#img-owner").html(i + ' <span class="dark">' + a.verb + "</span> " + a.taken), e("#img-title").html('<span class="glyphicon glyphicon-camera"></span>&nbsp;&nbsp;' + a.title), o.show(), 1 == t.settings.photoTransition ? s.fadeOut(1e3, function() {
					s.css({
						background: "none",
						zIndex: 9
					}), o.css({
						zIndex: 10
					})
				}) : (s.hide().css({
					background: "none",
					zIndex: 0
				}), o.css({
					zIndex: 1
				})), n.set(0), n.animate(1, {
					duration: t.settings.photoChange,
					step: function(t, e, s) {}
				}, function() {})
			})
        }, t.updatePhoto = function(backgroundImages) {
			if(backgroundImages[0] && backgroundImages[0].title != ''){
				t.setPhoto(backgroundImages[0]);
				setTimeout(function() {
					backgroundImages.shift();
					t.updatePhoto(backgroundImages)
				}, t.settings.photoChange)
			} else {
				
				$.getJSON("https://api.flickr.com/services/feeds/groups_pool.gne?jsoncallback=?",
					{
						// 78249294@N00 - "title": "Beautiful Scenery & Landscapes Pool"
						id: "78249294@N00",
						format: "json"
					},
				
				/*
				var keyword = "scenery,hd";
				$.getJSON("http://api.flickr.com/services/feeds/photos_public.gne?jsoncallback=?",
					{
						tags: keyword,
						tagmode: "all",
						format: "json"
					},
				*/
					function(data) {
						backgroundImages = data.items;
						t.updatePhoto(backgroundImages);
					});
			}
        }, t.init = function(s) {
            return t.settings = e.extend({}, t.defaults, s), t
        }, t
    }
}(this, jQuery, window, document);